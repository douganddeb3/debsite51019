{"filter":false,"title":"users_signup_test.rb","tooltip":"/deb_app/test/integration/users_signup_test.rb","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":2,"column":55},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":1},{"start":{"row":3,"column":0},"end":{"row":3,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":3,"column":2},"end":{"row":5,"column":5},"action":"insert","lines":["def setup","    ActionMailer::Base.deliveries.clear","  end"],"id":2}],[{"start":{"row":5,"column":5},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":18,"column":2},"end":{"row":18,"column":36},"action":"remove","lines":["test \"valid signup information\" do"],"id":4}],[{"start":{"row":18,"column":2},"end":{"row":18,"column":60},"action":"insert","lines":["test \"valid signup information with account activation\" do"],"id":5}],[{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"remove","lines":["#"],"id":6}],[{"start":{"row":28,"column":4},"end":{"row":28,"column":5},"action":"remove","lines":["#"],"id":7}],[{"start":{"row":25,"column":7},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":26,"column":4},"end":{"row":40,"column":33},"action":"insert","lines":["assert_equal 1, ActionMailer::Base.deliveries.size","    user = assigns(:user)","    assert_not user.activated?","    # Try to log in before activation.","    log_in_as(user)","    assert_not is_logged_in?","    # Invalid activation token","    get edit_account_activation_path(\"invalid token\", email: user.email)","    assert_not is_logged_in?","    # Valid token, wrong email","    get edit_account_activation_path(user.activation_token, email: 'wrong')","    assert_not is_logged_in?","    # Valid activation token","    get edit_account_activation_path(user.activation_token, email: user.email)","    assert user.reload.activated?"],"id":9}],[{"start":{"row":3,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["  def setup","    ActionMailer::Base.deliveries.clear","  end","  ",""],"id":10,"ignore":true},{"start":{"row":14,"column":32},"end":{"row":14,"column":56},"action":"remove","lines":[" with account activation"]},{"start":{"row":22,"column":0},"end":{"row":37,"column":0},"action":"remove","lines":["    assert_equal 1, ActionMailer::Base.deliveries.size","    user = assigns(:user)","    assert_not user.activated?","    # Try to log in before activation.","    log_in_as(user)","    assert_not is_logged_in?","    # Invalid activation token","    get edit_account_activation_path(\"invalid token\", email: user.email)","    assert_not is_logged_in?","    # Valid token, wrong email","    get edit_account_activation_path(user.activation_token, email: 'wrong')","    assert_not is_logged_in?","    # Valid activation token","    get edit_account_activation_path(user.activation_token, email: user.email)","    assert user.reload.activated?",""]}],[{"start":{"row":3,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["  def setup","    ActionMailer::Base.deliveries.clear","  end","  ",""],"id":11,"ignore":true},{"start":{"row":18,"column":32},"end":{"row":18,"column":56},"action":"insert","lines":[" with account activation"]},{"start":{"row":26,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["    assert_equal 1, ActionMailer::Base.deliveries.size","    user = assigns(:user)","    assert_not user.activated?","    # Try to log in before activation.","    log_in_as(user)","    assert_not is_logged_in?","    # Invalid activation token","    get edit_account_activation_path(\"invalid token\", email: user.email)","    assert_not is_logged_in?","    # Valid token, wrong email","    get edit_account_activation_path(user.activation_token, email: 'wrong')","    assert_not is_logged_in?","    # Valid activation token","    get edit_account_activation_path(user.activation_token, email: user.email)","    assert user.reload.activated?",""]}]]},"ace":{"folds":[],"scrolltop":406.5,"scrollleft":0,"selection":{"start":{"row":26,"column":0},"end":{"row":26,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":31,"mode":"ace/mode/ruby"}},"timestamp":1541853800892,"hash":"5bb9ed6653d46bc68b0fa2e737445b5ad3fb5744"}