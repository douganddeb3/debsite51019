{"filter":false,"title":"password_resets_test.rb","tooltip":"/deb_app/test/integration/password_resets_test.rb","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"remove","lines":["d"],"id":2},{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"remove","lines":["n"]},{"start":{"row":5,"column":4},"end":{"row":5,"column":5},"action":"remove","lines":["e"]},{"start":{"row":5,"column":3},"end":{"row":5,"column":4},"action":"remove","lines":[" "]},{"start":{"row":5,"column":2},"end":{"row":5,"column":3},"action":"remove","lines":["#"]},{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"remove","lines":["  "]},{"start":{"row":4,"column":17},"end":{"row":5,"column":0},"action":"remove","lines":["",""]},{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"remove","lines":["e"]},{"start":{"row":4,"column":15},"end":{"row":4,"column":16},"action":"remove","lines":["u"]},{"start":{"row":4,"column":14},"end":{"row":4,"column":15},"action":"remove","lines":["r"]},{"start":{"row":4,"column":13},"end":{"row":4,"column":14},"action":"remove","lines":["t"]},{"start":{"row":4,"column":12},"end":{"row":4,"column":13},"action":"remove","lines":[" "]},{"start":{"row":4,"column":11},"end":{"row":4,"column":12},"action":"remove","lines":["t"]},{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"remove","lines":["r"]},{"start":{"row":4,"column":9},"end":{"row":4,"column":10},"action":"remove","lines":["e"]},{"start":{"row":4,"column":8},"end":{"row":4,"column":9},"action":"remove","lines":["s"]},{"start":{"row":4,"column":7},"end":{"row":4,"column":8},"action":"remove","lines":["s"]},{"start":{"row":4,"column":6},"end":{"row":4,"column":7},"action":"remove","lines":["a"]},{"start":{"row":4,"column":4},"end":{"row":4,"column":6},"action":"remove","lines":["  "]}],[{"start":{"row":4,"column":3},"end":{"row":4,"column":4},"action":"remove","lines":[" "],"id":3},{"start":{"row":4,"column":2},"end":{"row":4,"column":3},"action":"remove","lines":["#"]},{"start":{"row":4,"column":0},"end":{"row":4,"column":2},"action":"remove","lines":["  "]},{"start":{"row":3,"column":23},"end":{"row":4,"column":0},"action":"remove","lines":["",""]},{"start":{"row":3,"column":22},"end":{"row":3,"column":23},"action":"remove","lines":["o"]},{"start":{"row":3,"column":21},"end":{"row":3,"column":22},"action":"remove","lines":["d"]},{"start":{"row":3,"column":20},"end":{"row":3,"column":21},"action":"remove","lines":[" "]},{"start":{"row":3,"column":19},"end":{"row":3,"column":20},"action":"remove","lines":["\""]},{"start":{"row":3,"column":18},"end":{"row":3,"column":19},"action":"remove","lines":["h"]},{"start":{"row":3,"column":17},"end":{"row":3,"column":18},"action":"remove","lines":["t"]},{"start":{"row":3,"column":16},"end":{"row":3,"column":17},"action":"remove","lines":["u"]},{"start":{"row":3,"column":15},"end":{"row":3,"column":16},"action":"remove","lines":["r"]},{"start":{"row":3,"column":14},"end":{"row":3,"column":15},"action":"remove","lines":["t"]},{"start":{"row":3,"column":13},"end":{"row":3,"column":14},"action":"remove","lines":[" "]},{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"remove","lines":["e"]},{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"remove","lines":["h"]},{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"remove","lines":["t"]},{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"remove","lines":["\""]},{"start":{"row":3,"column":8},"end":{"row":3,"column":9},"action":"remove","lines":[" "]},{"start":{"row":3,"column":7},"end":{"row":3,"column":8},"action":"remove","lines":["t"]},{"start":{"row":3,"column":6},"end":{"row":3,"column":7},"action":"remove","lines":["s"]},{"start":{"row":3,"column":5},"end":{"row":3,"column":6},"action":"remove","lines":["e"]}],[{"start":{"row":3,"column":4},"end":{"row":3,"column":5},"action":"remove","lines":["t"],"id":4},{"start":{"row":3,"column":3},"end":{"row":3,"column":4},"action":"remove","lines":[" "]},{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"remove","lines":["#"]}],[{"start":{"row":3,"column":2},"end":{"row":60,"column":3},"action":"insert","lines":[" def setup","    ActionMailer::Base.deliveries.clear","    @user = users(:michael)","  end","","  test \"password resets\" do","    get new_password_reset_path","    assert_template 'password_resets/new'","    # Invalid email","    post password_resets_path, params: { password_reset: { email: \"\" } }","    assert_not flash.empty?","    assert_template 'password_resets/new'","    # Valid email","    post password_resets_path,","         params: { password_reset: { email: @user.email } }","    assert_not_equal @user.reset_digest, @user.reload.reset_digest","    assert_equal 1, ActionMailer::Base.deliveries.size","    assert_not flash.empty?","    assert_redirected_to root_url","    # Password reset form","    user = assigns(:user)","    # Wrong email","    get edit_password_reset_path(user.reset_token, email: \"\")","    assert_redirected_to root_url","    # Inactive user","    user.toggle!(:activated)","    get edit_password_reset_path(user.reset_token, email: user.email)","    assert_redirected_to root_url","    user.toggle!(:activated)","    # Right email, wrong token","    get edit_password_reset_path('wrong token', email: user.email)","    assert_redirected_to root_url","    # Right email, right token","    get edit_password_reset_path(user.reset_token, email: user.email)","    assert_template 'password_resets/edit'","    assert_select \"input[name=email][type=hidden][value=?]\", user.email","    # Invalid password & confirmation","    patch password_reset_path(user.reset_token),","          params: { email: user.email,","                    user: { password:              \"foobaz\",","                            password_confirmation: \"barquux\" } }","    assert_select 'div#error_explanation'","    # Empty password","    patch password_reset_path(user.reset_token),","          params: { email: user.email,","                    user: { password:              \"\",","                            password_confirmation: \"\" } }","    assert_select 'div#error_explanation'","    # Valid password & confirmation","    patch password_reset_path(user.reset_token),","          params: { email: user.email,","                    user: { password:              \"foobaz\",","                            password_confirmation: \"foobaz\" } }","    assert is_logged_in?","    assert_not flash.empty?","    assert_redirected_to user","  end","end"],"id":5}],[{"start":{"row":61,"column":2},"end":{"row":61,"column":3},"action":"remove","lines":["d"],"id":6},{"start":{"row":61,"column":1},"end":{"row":61,"column":2},"action":"remove","lines":["n"]},{"start":{"row":61,"column":0},"end":{"row":61,"column":1},"action":"remove","lines":["e"]}]]},"ace":{"folds":[],"scrolltop":653.5,"scrollleft":0,"selection":{"start":{"row":61,"column":0},"end":{"row":61,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1542061489264,"hash":"0f6fd7120cdf9bc85c3b7e09dbf70d2ca9d2b991"}